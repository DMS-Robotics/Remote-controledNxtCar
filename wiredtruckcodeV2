#pragma config(Sensor, S1,     leftTURN,       sensorTouch)
#pragma config(Sensor, S2,     reverseDRIVE,   sensorTouch)
#pragma config(Sensor, S3,     fowardDRIVE,    sensorTouch)
#pragma config(Sensor, S4,     rightTURN,      sensorTouch)
#pragma config(Motor,  motorA,          rearSTEERING,  tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorB,          STEERING,      tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorC,          DRIVE,         tmotorNXT, PIDControl, encoder)
task main() {    
// JORGEN OR ANY OTHER PERSON DO NOT TOUCH MY CODE!!!!!!!!!!!!!!
// IF YOU WANT TO EDIT IT COPY THE FILE AND CHANGE STUFF IN A NEW DOCUMENT
// UNLESS YOU HAVE MY APPROVAL THIS CODE IS NOT ALLOWED TO BE TOUCHED!!!!!!!!!!
int imotorspeed=100;
int imotorsteeringdegrees=10;
int isteeringmotorspeed=100;
	while (1==1){
				//turn left __ degrees when touch sensor is pressed
  			if(SensorValue[leftTURN] ==  1){
            nMotorEncoder[STEERING]=0;
            nMotorEncoderTarget[STEERING]=imotorsteeringdegrees;
 						motor[STEERING] = isteeringmotorspeed; 
     				while(motor[STEERING]==!runStateIdle)
      			{}
        }else{
          	motor[STEERING]=0;
        }  
        //turn right __ degrees when touch sensor is pressed
 				if(SensorValue[rightTURN] ==  1){
         		nMotorEncoder[STEERING]=0;
            nMotorEncoderTarget[STEERING]=imotorsteeringdegrees;
 						motor[STEERING] = isteeringmotorspeed; 
     				while(motor[STEERING]==!runStateIdle)
      			{}
        }else{
            motor[STEERING]=0;
        }
        //reverse when touch sensor is pressed
        if(SensorValue[reverseDRIVE]==1){      
        		motor[DRIVE]=-imotorspeed;
        }else{    
        		motor[DRIVE]=0;
        }
        //forward when touch sensor is pressed
        if(SensorValue[fowardDRIVE]==1){      
       		 motor[DRIVE]=imotorspeed; 
        }else{      
       		 motor[DRIVE]=0;
        }
		}
}
